hostname: localhost
port: 1965

#
# Restrict who can access the proxy
#
# client_ip_allow:
#   - 127.0.0.1
#   - ::1
#   - 192.168.1.0/24

# Service mode. Can be 'server', 'proxy', or 'proxy,server'
# mode: 'proxy'

# Run as a daemon
# daemonize: true
#
# PID file path
# pid_file_path: /tmp/levior.pid

# Set a custom HTTP user agent
# http_user_agent: "NetSurf/1.2 (Linux; x86_64)"

# Javascript rendering
#
# js_render: true
# js_render_always: true
#
#
# Access log settings
#
# Cache the access log in the diskcache
# cache_access_log: true
#
# Enable the /access_log endpoint
# access_log_endpoint: true

# Cache settings
#
# cache_path: /tmp/levior
#
# Cache items eviction policy
# https://grantjenks.com/docs/diskcache/tutorial.html#eviction-policies
#
# cache_eviction_policy: "least-recently-used"
#
# TTL (cache items expire time, in seconds)
# cache_ttl_default: 600
#
# Enable or disable the links at the top of the page to
# instruct the proxy to cache the page for x days (or forever)
#
# page_cachelinks_show: true

verify_ssl: true

# Gemini links generation mode (paragraph, at-end, copy, off)
links_mode: paragraph

# Use a socks5 proxy
# socks5_proxy: socks5://localhost:9050

# include:
#   - levior:sites/*.yaml
#   - levior:sites/francetvinfo.yaml
#   - levior:sites/off-guardian.yaml
#   - myrules.yaml
#
# URL mapping
#
# urlmap:
#   /searx/{query}:
#     url: https://searx.be/search?q={query}


# URL rules: first match wins
# The 'feathers' option (integer between 0 and 5) controls how 'light' the
# gemtext document will be
#
# feathers = 0-1 will remove images and links outside of the visited website

urules:
  - url: "https?://searx.be"
    images: false

  - url: ".html?$"
    cache: true
    ttl: 300
    feathers: 0

  - regexp: ".*"

    # gemtext filters list
    gemtext_filters:
      # Remove all URLs containing 'google'
      - filter: levior.filters.links:url_remove
        urls:
          - .*google
